package com.kotekka.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAffiliationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAffiliationAllPropertiesEquals(UserAffiliation expected, UserAffiliation actual) {
        assertUserAffiliationAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAffiliationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAffiliationAllUpdatablePropertiesEquals(UserAffiliation expected, UserAffiliation actual) {
        assertUserAffiliationUpdatableFieldsEquals(expected, actual);
        assertUserAffiliationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAffiliationAutoGeneratedPropertiesEquals(UserAffiliation expected, UserAffiliation actual) {
        assertThat(expected)
            .as("Verify UserAffiliation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAffiliationUpdatableFieldsEquals(UserAffiliation expected, UserAffiliation actual) {
        assertThat(expected)
            .as("Verify UserAffiliation relevant properties")
            .satisfies(e -> assertThat(e.getWalletHolder()).as("check walletHolder").isEqualTo(actual.getWalletHolder()))
            .satisfies(e -> assertThat(e.getAffiliation()).as("check affiliation").isEqualTo(actual.getAffiliation()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAffiliationUpdatableRelationshipsEquals(UserAffiliation expected, UserAffiliation actual) {
        // empty method
    }
}
