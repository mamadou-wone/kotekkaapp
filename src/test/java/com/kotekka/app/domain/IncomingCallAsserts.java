package com.kotekka.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IncomingCallAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIncomingCallAllPropertiesEquals(IncomingCall expected, IncomingCall actual) {
        assertIncomingCallAutoGeneratedPropertiesEquals(expected, actual);
        assertIncomingCallAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIncomingCallAllUpdatablePropertiesEquals(IncomingCall expected, IncomingCall actual) {
        assertIncomingCallUpdatableFieldsEquals(expected, actual);
        assertIncomingCallUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIncomingCallAutoGeneratedPropertiesEquals(IncomingCall expected, IncomingCall actual) {
        assertThat(expected)
            .as("Verify IncomingCall auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIncomingCallUpdatableFieldsEquals(IncomingCall expected, IncomingCall actual) {
        assertThat(expected)
            .as("Verify IncomingCall relevant properties")
            .satisfies(e -> assertThat(e.getPartner()).as("check partner").isEqualTo(actual.getPartner()))
            .satisfies(e -> assertThat(e.getApi()).as("check api").isEqualTo(actual.getApi()))
            .satisfies(e -> assertThat(e.getMethod()).as("check method").isEqualTo(actual.getMethod()))
            .satisfies(e -> assertThat(e.getRequestHeaders()).as("check requestHeaders").isEqualTo(actual.getRequestHeaders()))
            .satisfies(e -> assertThat(e.getRequestBody()).as("check requestBody").isEqualTo(actual.getRequestBody()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getResponseStatusCode()).as("check responseStatusCode").isEqualTo(actual.getResponseStatusCode()))
            .satisfies(e -> assertThat(e.getResponseTime()).as("check responseTime").isEqualTo(actual.getResponseTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIncomingCallUpdatableRelationshipsEquals(IncomingCall expected, IncomingCall actual) {
        // empty method
    }
}
