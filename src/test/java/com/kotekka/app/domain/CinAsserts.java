package com.kotekka.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CinAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCinAllPropertiesEquals(Cin expected, Cin actual) {
        assertCinAutoGeneratedPropertiesEquals(expected, actual);
        assertCinAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCinAllUpdatablePropertiesEquals(Cin expected, Cin actual) {
        assertCinUpdatableFieldsEquals(expected, actual);
        assertCinUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCinAutoGeneratedPropertiesEquals(Cin expected, Cin actual) {
        assertThat(expected)
            .as("Verify Cin auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCinUpdatableFieldsEquals(Cin expected, Cin actual) {
        assertThat(expected)
            .as("Verify Cin relevant properties")
            .satisfies(e -> assertThat(e.getCinId()).as("check cinId").isEqualTo(actual.getCinId()))
            .satisfies(e -> assertThat(e.getValidityDate()).as("check validityDate").isEqualTo(actual.getValidityDate()))
            .satisfies(e -> assertThat(e.getBirthDate()).as("check birthDate").isEqualTo(actual.getBirthDate()))
            .satisfies(e -> assertThat(e.getBirthPlace()).as("check birthPlace").isEqualTo(actual.getBirthPlace()))
            .satisfies(e -> assertThat(e.getFirstName()).as("check firstName").isEqualTo(actual.getFirstName()))
            .satisfies(e -> assertThat(e.getLastName()).as("check lastName").isEqualTo(actual.getLastName()))
            .satisfies(e -> assertThat(e.getBirthCity()).as("check birthCity").isEqualTo(actual.getBirthCity()))
            .satisfies(e -> assertThat(e.getFatherName()).as("check fatherName").isEqualTo(actual.getFatherName()))
            .satisfies(e -> assertThat(e.getNationality()).as("check nationality").isEqualTo(actual.getNationality()))
            .satisfies(e -> assertThat(e.getNationalityCode()).as("check nationalityCode").isEqualTo(actual.getNationalityCode()))
            .satisfies(e -> assertThat(e.getIssuingCountry()).as("check issuingCountry").isEqualTo(actual.getIssuingCountry()))
            .satisfies(e -> assertThat(e.getIssuingCountryCode()).as("check issuingCountryCode").isEqualTo(actual.getIssuingCountryCode()))
            .satisfies(e -> assertThat(e.getMotherName()).as("check motherName").isEqualTo(actual.getMotherName()))
            .satisfies(e -> assertThat(e.getCivilRegister()).as("check civilRegister").isEqualTo(actual.getCivilRegister()))
            .satisfies(e -> assertThat(e.getSex()).as("check sex").isEqualTo(actual.getSex()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()))
            .satisfies(e -> assertThat(e.getBirthCityCode()).as("check birthCityCode").isEqualTo(actual.getBirthCityCode()))
            .satisfies(e -> assertThat(e.getWalletHolder()).as("check walletHolder").isEqualTo(actual.getWalletHolder()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCinUpdatableRelationshipsEquals(Cin expected, Cin actual) {
        // empty method
    }
}
