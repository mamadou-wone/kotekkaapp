package com.kotekka.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserPreferenceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferenceAllPropertiesEquals(UserPreference expected, UserPreference actual) {
        assertUserPreferenceAutoGeneratedPropertiesEquals(expected, actual);
        assertUserPreferenceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferenceAllUpdatablePropertiesEquals(UserPreference expected, UserPreference actual) {
        assertUserPreferenceUpdatableFieldsEquals(expected, actual);
        assertUserPreferenceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferenceAutoGeneratedPropertiesEquals(UserPreference expected, UserPreference actual) {
        assertThat(expected)
            .as("Verify UserPreference auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferenceUpdatableFieldsEquals(UserPreference expected, UserPreference actual) {
        assertThat(expected)
            .as("Verify UserPreference relevant properties")
            .satisfies(e -> assertThat(e.getApp()).as("check app").isEqualTo(actual.getApp()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getSetting()).as("check setting").isEqualTo(actual.getSetting()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferenceUpdatableRelationshipsEquals(UserPreference expected, UserPreference actual) {
        // empty method
    }
}
